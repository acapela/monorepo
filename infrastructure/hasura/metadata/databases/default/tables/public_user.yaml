table:
  name: user
  schema: public
object_relationships:
- name: current_team
  using:
    foreign_key_constraint_on: current_team_id
array_relationships:
- name: messages
  using:
    manual_configuration:
      column_mapping:
        id: user_id
      insertion_order: null
      remote_table:
        name: message
        schema: public
- name: owned_teams
  using:
    foreign_key_constraint_on:
      column: owner_id
      table:
        name: team
        schema: public
- name: team_memberships
  using:
    foreign_key_constraint_on:
      column: user_id
      table:
        name: team_member
        schema: public
computed_fields:
- definition:
    function:
      name: has_user_account
      schema: public
  name: has_account
select_permissions:
- permission:
    columns:
    - avatar_url
    - email
    - id
    - name
    - updated_at
    computed_fields:
    - has_account
    filter:
      _or:
      - team_memberships:
          team:
            memberships:
              user_id:
                _eq: X-Hasura-User-Id
      - messages:
          topic:
            team:
              memberships:
                user_id:
                  _eq: X-Hasura-User-Id
      - id:
          _eq: X-Hasura-User-Id
  role: user
update_permissions:
- permission:
    check: null
    columns:
    - avatar_url
    - current_team_id
    - name
    filter:
      id:
        _eq: X-Hasura-User-Id
  role: user
event_triggers:
- definition:
    enable_manual: false
    insert:
      columns: "*"
    update:
      columns:
      - avatar_url
      - email
      - name
      - created_at
      - email_verified
      - updated_at
      - current_team_id
      - id
  headers:
  - name: Authorization
    value_from_env: HASURA_EVENTS_WEBHOOK_AUTHORIZATION_HEADER
  name: user_updates
  retry_conf:
    interval_sec: 10
    num_retries: 0
    timeout_sec: 60
  webhook_from_env: HASURA_EVENTS_WEBHOOK_URL
