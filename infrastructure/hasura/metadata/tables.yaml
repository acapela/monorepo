- table:
    schema: public
    name: account
  object_relationships:
    - name: user
      using:
        foreign_key_constraint_on: user_id
- table:
    schema: public
    name: attachment
  array_relationships:
    - name: message_attachments
      using:
        foreign_key_constraint_on:
          column: attachment_id
          table:
            schema: public
            name: message_attachment
  insert_permissions:
    - role: user
      permission:
        check: {}
        columns: []
        backend_only: false
  select_permissions:
    - role: user
      permission:
        columns:
          - created_at
          - id
          - mime_type
          - original_name
        filter: {}
  update_permissions:
    - role: user
      permission:
        columns: []
        filter: {}
        check: null
  delete_permissions:
    - role: user
      permission:
        filter: {}
- table:
    schema: public
    name: full_text_search
  object_relationships:
    - name: room
      using:
        manual_configuration:
          remote_table:
            schema: public
            name: room
          column_mapping:
            room_id: id
  select_permissions:
    - role: user
      permission:
        columns:
          - room_id
          - room_name
          - user_id
          - topic_id
          - topic_name
          - message_created_at
          - message_type
          - message_id
          - message_content
          - transcription_id
          - attachment_id
          - attachment_name
          - transcript
        filter:
          user_id:
            _eq: X-Hasura-User-Id
- table:
    schema: public
    name: last_seen_message
  insert_permissions:
    - role: user
      permission:
        check:
          user_id:
            _eq: X-Hasura-User-Id
        set:
          user_id: x-hasura-User-Id
        columns:
          - message_id
          - topic_id
        backend_only: false
  select_permissions:
    - role: user
      permission:
        columns:
          - message_id
          - seen_at
          - topic_id
        filter:
          user_id:
            _eq: X-Hasura-User-Id
  update_permissions:
    - role: user
      permission:
        columns:
          - message_id
          - topic_id
        filter:
          user_id:
            _eq: X-Hasura-User-Id
        check: null
        set:
          user_id: x-hasura-User-Id
- table:
    schema: public
    name: membership_status
  is_enum: true
- table:
    schema: public
    name: message
  object_relationships:
    - name: message_type
      using:
        foreign_key_constraint_on: type
    - name: replied_to_message
      using:
        foreign_key_constraint_on: replied_to_message_id
    - name: topic
      using:
        foreign_key_constraint_on: topic_id
    - name: transcription
      using:
        foreign_key_constraint_on: transcription_id
    - name: user
      using:
        foreign_key_constraint_on: user_id
  array_relationships:
    - name: message_attachments
      using:
        manual_configuration:
          remote_table:
            schema: public
            name: message_attachment
          column_mapping:
            id: message_id
  insert_permissions:
    - role: user
      permission:
        check:
          topic:
            room:
              space:
                team:
                  memberships:
                    user_id:
                      _eq: X-Hasura-User-Id
        set:
          user_id: x-hasura-User-Id
        columns:
          - content
          - is_draft
          - is_draft
          - replied_to_message_id
          - topic_id
          - type
        backend_only: false
  select_permissions:
    - role: user
      permission:
        columns:
          - content
          - created_at
          - id
          - is_draft
          - replied_to_message_id
          - topic_id
          - type
          - user_id
        filter:
          topic:
            room:
              space:
                team:
                  memberships:
                    user_id:
                      _eq: X-Hasura-User-Id
        allow_aggregations: true
  update_permissions:
    - role: user
      permission:
        columns:
          - is_draft
          - content
        filter:
          user_id:
            _eq: X-Hasura-User-Id
        check: null
  delete_permissions:
    - role: user
      permission:
        filter:
          user_id:
            _eq: X-Hasura-User-Id
  event_triggers:
    - name: message_updates
      definition:
        enable_manual: false
        insert:
          columns: "*"
        delete:
          columns: "*"
        update:
          columns:
            - is_draft
            - content
            - type
            - created_at
            - id
            - topic_id
            - transcription_id
            - user_id
      retry_conf:
        num_retries: 5
        interval_sec: 10
        timeout_sec: 30
      webhook_from_env: HASURA_EVENTS_WEBHOOK_URL
      headers:
        - name: Authorization
          value_from_env: HASURA_EVENTS_WEBHOOK_AUTHORIZATION_HEADER
- table:
    schema: public
    name: message_attachment
  object_relationships:
    - name: attachment
      using:
        foreign_key_constraint_on: attachment_id
    - name: message
      using:
        foreign_key_constraint_on: message_id
  insert_permissions:
    - role: user
      permission:
        check: {}
        columns:
          - message_id
          - attachment_id
        backend_only: false
  select_permissions:
    - role: user
      permission:
        columns:
          - attachment_id
          - message_id
        filter: {}
  update_permissions:
    - role: user
      permission:
        columns:
          - attachment_id
          - message_id
        filter: {}
        check: null
  delete_permissions:
    - role: user
      permission:
        filter: {}
- table:
    schema: public
    name: message_full_text
- table:
    schema: public
    name: message_type
  is_enum: true
  select_permissions:
    - role: user
      permission:
        columns:
          - value
        filter: {}
- table:
    schema: public
    name: room
  object_relationships:
    - name: creator
      using:
        foreign_key_constraint_on: creator_id
    - name: last_posted_message
      using:
        manual_configuration:
          remote_table:
            schema: public
            name: room_last_posted_message
          column_mapping:
            id: room_id
    - name: space
      using:
        foreign_key_constraint_on: space_id
  array_relationships:
    - name: members
      using:
        manual_configuration:
          remote_table:
            schema: public
            name: room_member
          column_mapping:
            id: room_id
    - name: room_invites
      using:
        foreign_key_constraint_on:
          column: room_id
          table:
            schema: public
            name: room_invites
    - name: topics
      using:
        foreign_key_constraint_on:
          column: room_id
          table:
            schema: public
            name: topic
  insert_permissions:
    - role: user
      permission:
        check:
          space:
            team:
              memberships:
                user_id:
                  _eq: X-Hasura-User-Id
        set:
          creator_id: x-hasura-User-Id
        columns:
          - deadline
          - name
          - slug
          - source_google_calendar_event_id
          - space_id
          - summary
        backend_only: false
  select_permissions:
    - role: user
      permission:
        columns:
          - created_at
          - creator_id
          - deadline
          - finished_at
          - id
          - name
          - slug
          - source_google_calendar_event_id
          - space_id
          - summary
        filter:
          space:
            team:
              memberships:
                user_id:
                  _eq: X-Hasura-User-Id
  update_permissions:
    - role: user
      permission:
        columns:
          - deadline
          - finished_at
          - name
          - slug
          - summary
        filter:
          members:
            user_id:
              _eq: X-Hasura-User-Id
        check: null
  delete_permissions:
    - role: user
      permission:
        filter:
          space:
            team:
              memberships:
                user_id:
                  _eq: X-Hasura-User-Id
  event_triggers:
    - name: room_updates
      definition:
        enable_manual: false
        insert:
          columns: "*"
        delete:
          columns: "*"
        update:
          columns:
            - name
            - notification_job_id
            - slug
            - summary
            - created_at
            - deadline
            - finished_at
            - creator_id
            - id
            - space_id
      retry_conf:
        num_retries: 0
        interval_sec: 10
        timeout_sec: 60
      webhook_from_env: HASURA_EVENTS_WEBHOOK_URL
      headers:
        - name: Authorization
          value_from_env: HASURA_EVENTS_WEBHOOK_AUTHORIZATION_HEADER
- table:
    schema: public
    name: room_invites
  object_relationships:
    - name: inviter
      using:
        foreign_key_constraint_on: inviter_id
    - name: room
      using:
        foreign_key_constraint_on: room_id
  insert_permissions:
    - role: user
      permission:
        check:
          room:
            creator_id:
              _eq: X-Hasura-User-Id
        set:
          inviter_id: x-hasura-User-Id
        columns:
          - email
          - room_id
        backend_only: false
  select_permissions:
    - role: user
      permission:
        columns:
          - used_at
          - created_at
          - email
          - id
          - inviter_id
          - room_id
        filter:
          room:
            creator_id:
              _eq: X-Hasura-User-Id
- table:
    schema: public
    name: room_last_posted_message
  object_relationships:
    - name: room
      using:
        manual_configuration:
          remote_table:
            schema: public
            name: room
          column_mapping:
            room_id: id
  select_permissions:
    - role: user
      permission:
        columns:
          - last_posted_message_time
        filter:
          room:
            space:
              team:
                memberships:
                  user_id:
                    _eq: X-Hasura-User-Id
- table:
    schema: public
    name: room_member
  object_relationships:
    - name: room
      using:
        foreign_key_constraint_on: room_id
    - name: user
      using:
        foreign_key_constraint_on: user_id
  insert_permissions:
    - role: user
      permission:
        check:
          room:
            space:
              team:
                memberships:
                  _and:
                    - user_id:
                        _eq: X-Hasura-User-Id
                    - user_id:
                        _ceq: user_id
        columns:
          - room_id
          - user_id
        backend_only: false
  select_permissions:
    - role: user
      permission:
        columns:
          - room_id
          - user_id
        filter:
          room:
            space:
              team:
                memberships:
                  user_id:
                    _eq: X-Hasura-User-Id
  update_permissions:
    - role: user
      permission:
        columns: []
        filter:
          room:
            space:
              team:
                memberships:
                  user_id:
                    _eq: X-Hasura-User-Id
        check: null
  delete_permissions:
    - role: user
      permission:
        filter:
          room:
            space:
              team:
                memberships:
                  user_id:
                    _eq: X-Hasura-User-Id
  event_triggers:
    - name: room_member_updates
      definition:
        enable_manual: false
        insert:
          columns: "*"
        delete:
          columns: "*"
        update:
          columns:
            - room_id
            - user_id
      retry_conf:
        num_retries: 0
        interval_sec: 10
        timeout_sec: 60
      webhook_from_env: HASURA_EVENTS_WEBHOOK_URL
      headers:
        - name: Authorization
          value_from_env: HASURA_EVENTS_WEBHOOK_AUTHORIZATION_HEADER
- table:
    schema: public
    name: space
  object_relationships:
    - name: creator
      using:
        manual_configuration:
          remote_table:
            schema: public
            name: user
          column_mapping:
            creator_id: id
    - name: team
      using:
        foreign_key_constraint_on: team_id
  array_relationships:
    - name: members
      using:
        foreign_key_constraint_on:
          column: space_id
          table:
            schema: public
            name: space_member
    - name: rooms
      using:
        foreign_key_constraint_on:
          column: space_id
          table:
            schema: public
            name: room
  insert_permissions:
    - role: user
      permission:
        check:
          team:
            memberships:
              user_id:
                _eq: X-Hasura-User-Id
        set:
          creator_id: x-hasura-User-Id
        columns:
          - name
          - slug
          - team_id
        backend_only: false
  select_permissions:
    - role: user
      permission:
        columns:
          - creator_id
          - id
          - name
          - slug
          - team_id
        filter:
          team:
            memberships:
              user_id:
                _eq: X-Hasura-User-Id
  update_permissions:
    - role: user
      permission:
        columns:
          - name
          - slug
        filter:
          team:
            memberships:
              user_id:
                _eq: X-Hasura-User-Id
        check: null
  delete_permissions:
    - role: user
      permission:
        filter:
          team:
            memberships:
              user_id:
                _eq: X-Hasura-User-Id
  event_triggers:
    - name: space_updates
      definition:
        enable_manual: false
        insert:
          columns: "*"
        delete:
          columns: "*"
        update:
          columns:
            - name
            - slug
            - creator_id
            - id
            - team_id
      retry_conf:
        num_retries: 0
        interval_sec: 10
        timeout_sec: 60
      webhook_from_env: HASURA_EVENTS_WEBHOOK_URL
      headers:
        - name: Authorization
          value_from_env: HASURA_EVENTS_WEBHOOK_AUTHORIZATION_HEADER
- table:
    schema: public
    name: space_member
  object_relationships:
    - name: space
      using:
        foreign_key_constraint_on: space_id
    - name: user
      using:
        foreign_key_constraint_on: user_id
  insert_permissions:
    - role: user
      permission:
        check:
          space:
            team:
              memberships:
                _and:
                  - user_id:
                      _eq: X-Hasura-User-Id
                  - user_id:
                      _ceq: user_id
        columns:
          - space_id
          - user_id
        backend_only: false
  select_permissions:
    - role: user
      permission:
        columns:
          - space_id
          - user_id
        filter:
          space:
            team:
              memberships:
                user_id:
                  _eq: X-Hasura-User-Id
  update_permissions:
    - role: user
      permission:
        columns: []
        filter:
          space:
            team:
              memberships:
                user_id:
                  _eq: X-Hasura-User-Id
        check: null
  delete_permissions:
    - role: user
      permission:
        filter:
          space:
            team:
              memberships:
                user_id:
                  _eq: X-Hasura-User-Id
- table:
    schema: public
    name: team
  object_relationships:
    - name: owner
      using:
        foreign_key_constraint_on: owner_id
  array_relationships:
    - name: invitations
      using:
        foreign_key_constraint_on:
          column: team_id
          table:
            schema: public
            name: team_invitation
    - name: memberships
      using:
        foreign_key_constraint_on:
          column: team_id
          table:
            schema: public
            name: team_member
    - name: spaces
      using:
        foreign_key_constraint_on:
          column: team_id
          table:
            schema: public
            name: space
  insert_permissions:
    - role: user
      permission:
        check: {}
        set:
          owner_id: x-hasura-User-Id
        columns:
          - name
          - slug
        backend_only: false
  select_permissions:
    - role: user
      permission:
        columns:
          - id
          - name
          - owner_id
          - slug
        filter:
          _or:
            - owner_id:
                _eq: X-Hasura-User-Id
            - memberships:
                user_id:
                  _eq: X-Hasura-User-Id
  update_permissions:
    - role: user
      permission:
        columns: []
        filter:
          _or:
            - owner_id:
                _eq: X-Hasura-User-Id
            - memberships:
                user_id:
                  _eq: X-Hasura-User-Id
        check: null
  delete_permissions:
    - role: user
      permission:
        filter:
          owner_id:
            _eq: X-Hasura-User-Id
  event_triggers:
    - name: team_updates
      definition:
        enable_manual: false
        insert:
          columns: "*"
        delete:
          columns: "*"
        update:
          columns:
            - name
            - slug
            - id
            - owner_id
      retry_conf:
        num_retries: 0
        interval_sec: 10
        timeout_sec: 60
      webhook_from_env: HASURA_EVENTS_WEBHOOK_URL
      headers:
        - name: Authorization
          value_from_env: HASURA_EVENTS_WEBHOOK_AUTHORIZATION_HEADER
- table:
    schema: public
    name: team_invitation
  object_relationships:
    - name: inviting_user
      using:
        foreign_key_constraint_on: inviting_user_id
    - name: team
      using:
        foreign_key_constraint_on: team_id
    - name: used_by_user
      using:
        foreign_key_constraint_on: used_by_user_id
  insert_permissions:
    - role: user
      permission:
        check:
          team:
            memberships:
              user_id:
                _eq: X-Hasura-User-Id
        set:
          inviting_user_id: x-hasura-User-Id
        columns:
          - email
          - team_id
        backend_only: false
  select_permissions:
    - role: user
      permission:
        columns:
          - created_at
          - email
          - id
          - inviting_user_id
          - team_id
          - token
          - used_at
          - used_by_user_id
        filter:
          team:
            memberships:
              user_id:
                _eq: X-Hasura-User-Id
  delete_permissions:
    - role: user
      permission:
        filter:
          team:
            memberships:
              user_id:
                _eq: X-Hasura-User-Id
  event_triggers:
    - name: team_invitation_updates
      definition:
        enable_manual: false
        insert:
          columns: "*"
        delete:
          columns: "*"
        update:
          columns:
            - used_at
            - email
            - created_at
            - id
            - inviting_user_id
            - team_id
            - token
      retry_conf:
        num_retries: 0
        interval_sec: 10
        timeout_sec: 60
      webhook_from_env: HASURA_EVENTS_WEBHOOK_URL
      headers:
        - name: Authorization
          value_from_env: HASURA_EVENTS_WEBHOOK_AUTHORIZATION_HEADER
- table:
    schema: public
    name: team_member
  object_relationships:
    - name: team
      using:
        foreign_key_constraint_on: team_id
    - name: user
      using:
        foreign_key_constraint_on: user_id
  insert_permissions:
    - role: user
      permission:
        check:
          team:
            memberships:
              _and:
                - user_id:
                    _eq: X-Hasura-User-Id
                - user_id:
                    _ceq: user_id
        columns:
          - team_id
          - user_id
        backend_only: false
  select_permissions:
    - role: user
      permission:
        columns:
          - team_id
          - user_id
        filter:
          team:
            memberships:
              user_id:
                _eq: X-Hasura-User-Id
  delete_permissions:
    - role: user
      permission:
        filter:
          team:
            memberships:
              user_id:
                _eq: X-Hasura-User-Id
- table:
    schema: public
    name: topic
  object_relationships:
    - name: closed_by_user
      using:
        manual_configuration:
          remote_table:
            schema: public
            name: user
          column_mapping:
            closed_by_user_id: id
    - name: room
      using:
        foreign_key_constraint_on: room_id
  array_relationships:
    - name: members
      using:
        foreign_key_constraint_on:
          column: topic_id
          table:
            schema: public
            name: topic_member
    - name: messages
      using:
        manual_configuration:
          remote_table:
            schema: public
            name: message
          column_mapping:
            id: topic_id
  insert_permissions:
    - role: user
      permission:
        check:
          room:
            space:
              team:
                memberships:
                  user_id:
                    _eq: X-Hasura-User-Id
        columns:
          - index
          - name
          - room_id
          - slug
        backend_only: false
  select_permissions:
    - role: user
      permission:
        columns:
          - closed_at
          - closed_by_user_id
          - closing_summary
          - id
          - index
          - name
          - room_id
          - slug
        filter:
          room:
            space:
              team:
                memberships:
                  user_id:
                    _eq: X-Hasura-User-Id
        allow_aggregations: true
  update_permissions:
    - role: user
      permission:
        columns:
          - closed_at
          - closed_by_user_id
          - closing_summary
          - index
          - name
        filter:
          room:
            space:
              team:
                memberships:
                  user_id:
                    _eq: X-Hasura-User-Id
        check: null
  delete_permissions:
    - role: user
      permission:
        filter:
          room:
            space:
              team:
                memberships:
                  user_id:
                    _eq: X-Hasura-User-Id
  event_triggers:
    - name: topic_updates
      definition:
        enable_manual: false
        insert:
          columns: "*"
        delete:
          columns: "*"
        update:
          columns:
            - index
            - name
            - slug
            - id
            - room_id
      retry_conf:
        num_retries: 0
        interval_sec: 10
        timeout_sec: 60
      webhook_from_env: HASURA_EVENTS_WEBHOOK_URL
      headers:
        - name: Authorization
          value_from_env: HASURA_EVENTS_WEBHOOK_AUTHORIZATION_HEADER
- table:
    schema: public
    name: topic_member
  object_relationships:
    - name: topic
      using:
        foreign_key_constraint_on: topic_id
    - name: user
      using:
        foreign_key_constraint_on: user_id
  insert_permissions:
    - role: user
      permission:
        check:
          topic:
            room:
              space:
                team:
                  memberships:
                    _and:
                      - user_id:
                          _eq: X-Hasura-User-Id
                      - user_id:
                          _ceq: user_id
        columns:
          - topic_id
          - user_id
        backend_only: false
  select_permissions:
    - role: user
      permission:
        columns:
          - topic_id
          - user_id
        filter:
          topic:
            room:
              space:
                team:
                  memberships:
                    user_id:
                      _eq: X-Hasura-User-Id
  delete_permissions:
    - role: user
      permission:
        filter:
          topic:
            room:
              space:
                team:
                  memberships:
                    user_id:
                      _eq: X-Hasura-User-Id
- table:
    schema: public
    name: transcription
  select_permissions:
    - role: user
      permission:
        columns:
          - created_at
          - id
          - status
          - transcript
          - updated_at
        filter: {}
- table:
    schema: public
    name: transcription_full_text
- table:
    schema: public
    name: transcription_status
  is_enum: true
- table:
    schema: public
    name: unread_messages
  select_permissions:
    - role: user
      permission:
        columns:
          - room_id
          - topic_id
          - unread_messages
          - user_id
        filter:
          user_id:
            _eq: X-Hasura-User-Id
- table:
    schema: public
    name: user
  object_relationships:
    - name: current_team
      using:
        foreign_key_constraint_on: current_team_id
  array_relationships:
    - name: created_rooms
      using:
        foreign_key_constraint_on:
          column: creator_id
          table:
            schema: public
            name: room
    - name: created_team_invitations
      using:
        foreign_key_constraint_on:
          column: inviting_user_id
          table:
            schema: public
            name: team_invitation
    - name: invites
      using:
        foreign_key_constraint_on:
          column: inviter_id
          table:
            schema: public
            name: room_invites
    - name: messages
      using:
        manual_configuration:
          remote_table:
            schema: public
            name: message
          column_mapping:
            id: user_id
    - name: owned_teams
      using:
        foreign_key_constraint_on:
          column: owner_id
          table:
            schema: public
            name: team
    - name: rooms
      using:
        manual_configuration:
          remote_table:
            schema: public
            name: room_member
          column_mapping:
            id: user_id
    - name: space_memberships
      using:
        foreign_key_constraint_on:
          column: user_id
          table:
            schema: public
            name: space_member
    - name: team_memberships
      using:
        foreign_key_constraint_on:
          column: user_id
          table:
            schema: public
            name: team_member
    - name: topic_memberships
      using:
        foreign_key_constraint_on:
          column: user_id
          table:
            schema: public
            name: topic_member
  select_permissions:
    - role: user
      permission:
        columns:
          - avatar_url
          - email
          - id
          - name
        filter:
          team_memberships:
            team:
              memberships:
                user_id:
                  _eq: X-Hasura-User-Id
  update_permissions:
    - role: user
      permission:
        columns:
          - avatar_url
          - current_team_id
          - name
        filter:
          id:
            _eq: X-Hasura-User-Id
        check: null
  event_triggers:
    - name: user_updates
      definition:
        enable_manual: false
        insert:
          columns: "*"
        update:
          columns:
            - avatar_url
            - email
            - name
            - created_at
            - email_verified
            - current_team_id
            - id
      retry_conf:
        num_retries: 0
        interval_sec: 10
        timeout_sec: 60
      webhook_from_env: HASURA_EVENTS_WEBHOOK_URL
      headers:
        - name: Authorization
          value_from_env: HASURA_EVENTS_WEBHOOK_AUTHORIZATION_HEADER
- table:
    schema: public
    name: whitelist
