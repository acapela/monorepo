type Query {
  get_slack_installation_url(input: GetSlackInstallationURLInput!): GetSlackInstallationURLOutput
}

type Query {
  get_team_slack_installation_url(input: GetTeamSlackInstallationURLInput!): GetTeamSlackInstallationURLOutput
}

type Query {
  get_upload_url(fileName: String!, mimeType: String!): UploadUrlResponse
}

type Mutation {
  invite_user(input: InviteUserInput!): InviteUserOutput
}

type Mutation {
  join_topic(access_token: uuid!): JoinTopicOutput
}

type Query {
  linear_users: [ServiceUser!]!
}

type Query {
  slack_conversations: [SlackConversation!]!
}

type Query {
  slack_user(team_id: uuid!): SlackUserOutput
}

type Query {
  slack_users: [ServiceUser!]!
}

type Mutation {
  switch_subscription_plan(plan: SubscriptionPlan!): SwitchSubscriptionPlanOutput!
}

type Mutation {
  uninstall_slack(team_id: uuid!): UninstallSlackOutput!
}

type Mutation {
  upgrade_current_user: UpgradeUserResponse
}

enum SubscriptionPlan {
  FREE
  PREMIUM
  ULTIMATE
}

input GetTeamSlackInstallationURLInput {
  redirectURL: String!
  team_id: uuid!
  with_bot: Boolean!
}

input FindSlackUserInput {
  team_id: uuid!
}

input InviteUserInput {
  email: String!
  team_id: uuid!
}

input GetSlackInstallationURLInput {
  redirectURL: String!
  teamId: String
}

type UpgradeUserResponse {
  user_id: ID!
}

type UploadUrlResponse {
  uploadUrl: String!
  uuid: ID!
}

type DownloadUrlResponse {
  downloadUrl: String!
}

type ResendInvitationResponse {
  sent_at: timestamptz
}

type GetTeamSlackInstallationURLOutput {
  url: String!
}

type FindSlackUserOutput {
  has_slack_user: Boolean!
}

type AcceptInvitationsOutput {
  success: Boolean!
}

type InviteUserOutput {
  success: Boolean!
}

type SlackUserOutput {
  slack_user_id: String
}

type UninstallSlackOutput {
  success: Boolean!
}

type JoinTopicOutput {
  success: Boolean!
}

type GetSlackInstallationURLOutput {
  url: String!
}

type SlackUser {
  id: String!
  display_name: String!
  real_name: String
  avatar_url: String
}

type ServiceUser {
  id: String!
  workspace_id: String!
  display_name: String!
  real_name: String
  avatar_url: String
}

type SlackConversation {
  workspace_id: String!
  id: String!
  name: String!
  is_private: Boolean!
}

type GitHubInstallation {
  id: Int!
  name: String!
  isOrg: Boolean!
}

type SwitchSubscriptionPlanOutput {
  checkout_url: String
}
