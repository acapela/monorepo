{
  "name": "@acapela/root",
  "private": true,
  "version": "0.1.0",
  "engines": {
    "npm": ">=7.0.0"
  },
  "workspaces": {
    "packages": [
      "frontend",
      "backend",
      "config",
      "ui",
      "shared",
      "db",
      "tooling"
    ]
  },
  "scripts": {
    "unstable:scope": "func() { ( npm \"$2\" --prefix \"$1\" --save --package-lock-only --no-package-lock \"$3\" ; ) && npm i;}; func",
    "frontend:dev": "npm run frontend -- run dev",
    "frontend:test": "npm run frontend -- run test",
    "frontend:test:watch": "npm run frontend -- run test:watch",
    "frontend:lint": "npm run frontend -- run lint",
    "frontend:format": "npm run frontend -- run format",
    "backend:dev": "npm run backend -- run dev",
    "backend:test": "npm run backend -- run test",
    "backend:test:watch": "npm run backend -- run test:watch",
    "backend:lint": "npm run backend -- run lint",
    "backend:format": "npm run backend -- run format",
    "backend:build": "npm run backend -- run gcp-build",
    "docker:up:detach": "npm run docker:up -- -d",
    "docker:up": "docker-compose --env-file .env up --force-recreate",
    "docker:config": "docker-compose --env-file .env config",
    "docker:stop": "docker-compose stop",
    "frontend": "cd frontend && npm --",
    "backend": "cd backend && npm --",
    "ui": "cd ui && npm --",
    "db": "cd db && npm --",
    "start": "ntl --descriptions --autocomplete --no-rerun-cache --size 20 --exclude start frontend backend",
    "hasura:migrations": "hasura migrate apply --project infrastructure/hasura --admin-secret dev",
    "hasura:meta": "hasura metadata apply --project infrastructure/hasura --admin-secret dev",
    "hasura:console": "hasura console --project infrastructure/hasura --admin-secret dev",
    "frontend:gql-types": "tooling gql frontend --watch",
    "postinstall": "npm run db -- run generate",
    "lint": "eslint \"{frontend/src,frontend/pages,backend/src,ui,db,config,shared,tooling}/**/*.{js,ts,tsx}\" && prettier --check backend/src frontend/src frontend/pages ui db config shared tooling",
    "test": "npm run frontend:test && npm run backend:test",
    "format": "prettier --write backend/src frontend/src frontend/pages ui db config shared tooling",
    "prepare": "husky install"
  },
  "lint-staged": {
    "*.ts?(x)": [
      "prettier --write"
    ]
  },
  "ntl": {
    "descriptions": {
      "frontend:dev": "Start frontend dev server",
      "frontend:gql-types": "Generate graphql types for frontend",
      "backend:dev": "Start backend dev server",
      "docker:up:detach": "Start docker infrastructure in detached mode",
      "docker:up": "Start docker infrastructure in interactive mode",
      "docker:stop": "Stop docker infrastructure",
      "hasura:console": "Start hasura dev console"
    }
  },
  "dependencies": {
    "@acapela/tooling": "0.1.0",
    "axios": "^0.21.1",
    "color": "^3.1.3",
    "date-fns": "^2.17.0",
    "express": "^4.17.1",
    "graphql": "^15.5.0",
    "graphql-request": "^3.4.0",
    "hasura-cli": "^1.4.0-alpha.2",
    "knex": "^0.21.18",
    "lodash": "^4.17.21",
    "pg": "^8.5.1",
    "react": "^17.0.1",
    "react-dom": "^17.0.1",
    "styled-components": "^5.2.1",
    "typescript": "^4.1.5",
    "uuid": "^8.3.2"
  },
  "devDependencies": {
    "@types/color": "^3.0.1",
    "@types/express": "^4.17.11",
    "@types/jest": "^26.0.20",
    "@types/js-yaml": "^4.0.0",
    "@types/jsonwebtoken": "^8.5.0",
    "@types/lodash": "^4.14.168",
    "@types/next-auth": "^3.1.24",
    "@types/node": "^14.14.31",
    "@types/pino": "^6.3.6",
    "@types/pino-http": "^5.4.0",
    "@types/react": "^17.0.2",
    "@types/styled-components": "^5.1.7",
    "@types/supertest": "^2.0.10",
    "@types/uuid": "^8.3.0",
    "@vercel/ncc": "^0.27.0",
    "commitizen": "^4.2.3",
    "cz-conventional-changelog": "^3.2.0",
    "dotenv": "^8.2.0",
    "eslint": "^7.20.0",
    "eslint-config-prettier": "^8.0.0",
    "husky": "^5.1.3",
    "jest": "^26.6.3",
    "lint-staged": "^10.5.4",
    "ntl": "^5.1.0",
    "prettier": "^2.2.1",
    "ts-jest": "^26.5.1",
    "ts-node": "^9.1.1",
    "ts-node-dev": "^1.1.1",
    "tsc-watch": "^4.2.9",
    "yargs": "^16.2.0"
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  }
}
