name: Publish Desktop App
on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/node-and-yarn
      - run: yarn desktop build:bundle
      - run: yarn desktop upload-sourcemaps
        env:
          RELEASE_VERSION: ${{ github.ref_name }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      #      - run: yarn desktop upload-bundle
      #        env:
      #          RELEASE_VERSION: ${{ github.ref_name }}
      #          GITHUB_TOKEN: ${{ secrets.GH_RELEASES_TOKEN }}
      - uses: actions/upload-artifact@v2
        with:
          name: dist-production
          path: desktop/dist-production
          retention-days: 1

  publish:
    name: Publish
    runs-on: macos-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
      - uses: actions/download-artifact@v2
        with:
          name: dist-production
          path: desktop/dist-production
      - name: Install dependencies
        run: |
          npm config set ignore-scripts true
          npm i "electron-builder@$(jq -r '.devDependencies["electron-builder"]' ./desktop/package.json)" -g --force
          electron-builder --version
          npm i "electron-notarize@$(jq -r '.devDependencies["electron-notarize"]' ./desktop/package.json)" -g --force
          echo "NODE_PATH=$(npm root -g)" >> $GITHUB_ENV
      - name: Publish
        run: |
          cd desktop/
          ./scripts/publish.sh production
        env:
          GITHUB_TOKEN: ${{ secrets.GH_RELEASES_TOKEN }}
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          RELEASE_VERSION: ${{ github.ref_name }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_PRODUCT_WEBHOOK_URL: ${{ secrets.SLACK_PRODUCT_WEBHOOK_URL }}
