name: CI
on: push
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        ports:
          - "5432:5432"
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: dev
          POSTGRES_DB: dev_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      hasura:
        image: hasura/graphql-engine:v1.3.2
        ports:
          - "8080:8080"
        env:
          HASURA_GRAPHQL_DATABASE_URL: postgres://user:dev@postgres:5432/dev_db
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Install Hasura cli
        run: curl -L https://github.com/hasura/graphql-engine/raw/master/cli/get.sh | bash
      - name: Migrate postgres using hasura migrations
        run: |
          cd hasura
          hasura migrate status --skip-update-check --endpoint http://localhost:8080
          hasura migrate apply --skip-update-check --endpoint http://localhost:8080
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        run: npm ci
      - name: Build project
        run: npm run build
      - name: Run tests
        run: npm run test
      - name: Run tests for hasura schema
        run: npm run test:hasura
      - name: Lint
        run: npm run lint
      - name: Check formatting
        run: npm run checkformat
  deploy-backend:
    name: Deploy backend
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Authenticate with google cloud
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: "290.0.1"
          project_id: meetnomoreapp
          service_account_key: ${{ secrets.GCLOUD_AUTH }}
      - name: Deploy backend
        run: gcloud app deploy --quiet --project=meetnomoreapp backend-appengine-config.yaml
  deploy-hasura:
    name: Deploy hasura migrations
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Apply hasura migrations
        uses: tibotiber/hasura-action@master
        with:
          args: migrate apply
        env:
          HASURA_ENDPOINT: ${{ secrets.HASURA_ENDPOINT }}
          HASURA_ADMIN_SECRET: ${{ secrets.HASURA_ADMIN_SECRET }}
          HASURA_WORKDIR: hasura
      - name: Apply hasura metadata changes
        uses: tibotiber/hasura-action@master
        with:
          args: metadata apply
        env:
          HASURA_ENDPOINT: ${{ secrets.HASURA_ENDPOINT }}
          HASURA_ADMIN_SECRET: ${{ secrets.HASURA_ADMIN_SECRET }}
          HASURA_WORKDIR: hasura
