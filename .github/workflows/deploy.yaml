name: Deploy
on:
  workflow_dispatch:
    inputs:
      stage:
        description: "the stage for the deployment"
        required: true
        default: "production"
      app:
        description: "the application that should be deployed (frontend, backend, all)"
        required: true
        default: "all"
      version:
        description: "the version that should be deployed"
        required: true
        default: "latest"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install kustomize
        run: |
          npm i "kustomize@$(jq -r '.devDependencies.kustomize' ./package.json)" -g --force
          kustomize version
      - uses: google-github-actions/auth@v0.4.0
        with:
          credentials_json: ${{ secrets.GCLOUD_AUTH }}
      - uses: google-github-actions/get-gke-credentials@main
        with:
          cluster_name: cluster-1
          location: europe-west1
      - run: |
          ./scripts/deploy.sh -s ${{ github.event.inputs.stage }} -a ${{ github.event.inputs.app }} -v ${{ github.event.inputs.version }}
        env:
          KUSTOMIZE_CMD: kustomize
          GITHUB_TOKEN: ${{ secrets.GH_RELEASES_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_PRODUCT_WEBHOOK_URL: ${{ secrets.SLACK_PRODUCT_WEBHOOK_URL }}
      - uses: actions/upload-artifact@v2
        with:
          name: deploy-info
          path: deploy-info.txt

  desktop:
    runs-on: macos-latest
    needs: [deploy]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: deploy-info
      - run: ./scripts/load-deploy-info.sh
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
      - name: Install dependencies
        run: |
          npm config set ignore-scripts true
          npm i "electron-builder@$(jq -r '.devDependencies["electron-builder"]' ./desktop/package.json)" -g --force
          electron-builder --version
          npm i "electron-notarize@$(jq -r '.devDependencies["electron-notarize"]' ./desktop/package.json)" -g --force
          echo "NODE_PATH=$(npm root -g)" >> $GITHUB_ENV
      - name: Publish
        run: |
          cd desktop/
          ./scripts/fetch-bundle.sh "$RELEASE_VERSION"
          ./scripts/publish.sh production
        env:
          GITHUB_TOKEN: ${{ secrets.GH_RELEASES_TOKEN }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_PRODUCT_WEBHOOK_URL: ${{ secrets.SLACK_PRODUCT_WEBHOOK_URL }}
