version: "3.6"
services:
  postgres:
    image: postgres:12
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_DB: "${DB_NAME}"
    ports:
      - "5432:5432"
  hasura:
    image: hasura/graphql-engine:v2.6.2

    ports:
      - "8080:8080"
    depends_on:
      - "postgres"
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME}
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLE_CONSOLE: "false"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_JWT_SECRET: '{ "type": "HS512", "key": "${AUTH_JWT_TOKEN_SECRET}", "header": {"type": "Cookie", "name": "next-auth.session-token" } }'
      HASURA_GRAPHQL_ADMIN_SECRET: "${HASURA_API_SECRET}"
      HASURA_ACTIONS_WEBHOOK_URL: http://172.17.0.1:1337/api/v1/actions
      HASURA_ACTIONS_WEBHOOK_AUTHORIZATION_HEADER: Bearer ${HASURA_ACTION_SECRET}
      HASURA_EVENTS_WEBHOOK_URL: http://172.17.0.1:1337/api/v1/events
      HASURA_EVENTS_WEBHOOK_AUTHORIZATION_HEADER: Bearer ${HASURA_EVENT_SECRET}
      HASURA_CRON_WEBHOOK_URL: http://172.17.0.1:1337/api/v1/cron
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: public
  caddy:
    image: caddy:2.4.6
    restart: always
    environment:
      BACKEND_HOST: http://172.17.0.1:1337
      HASURA_HOST: http://172.17.0.1:8080
      HOOKS_HOST: http://172.17.0.1:1338
    ports:
      - "3000:3000"
    volumes:
      - $PWD/Caddyfile:/etc/caddy/Caddyfile
      - $PWD/frontend/dist:/var/www/frontend
  redis:
    image: redis:6.2.7
    restart: always
    ports:
      - "6379:6379"
volumes:
  db_data:
